{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","step","status","current","winner","previous","next","newGame","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5820f438.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// ===================================\n/* Square */\nfunction Square(props) {\n  return (\n    <button className=\"board-square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  )\n}\n\n// =====================================\n/* Board */\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\n// =======================================\n/* Game */\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true\n    }\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  newGame() {\n    this.setState({\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: this.state.xIsNext === true ? false : true,\n    })\n  }\n\n  previous() {\n    const step = this.state.stepNumber;\n    if (step > 0) {\n      this.setState({\n        stepNumber: step - 1,\n        xIsNext: (step % 2) === 0, // tests if the number we're changing StepNumber to is even\n      })\n    }\n  }\n\n  next() {\n    const step = this.state.stepNumber;\n    const nextMove = this.state.history[this.state.stepNumber + 1];\n    if (typeof nextMove !== 'undefined') {\n      this.setState({\n        stepNumber: step + 1,\n        xIsNext: (step % 2) === 0, // tests if the number we're changing StepNumber to is even\n      })\n    }\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-stats\">\n          <h1 className=\"game-title\">TIC TAC TOE</h1>\n          <hr></hr>\n          <p className=\"game-turn\">{status}</p>\n          <div className=\"game-buttons-row\">\n            <button className=\"game-buttons game-buttons_half-width-left\" onClick={() => this.previous()}>&#8678; Step Back</button>\n            <button className=\"game-buttons game-buttons_half-width-right\" onClick={() => this.next()}>Step Forward &#8680;</button>\n          </div>\n          <div className=\"game-buttons-row\">\n            <button className=\"game-buttons game-buttons_full-width\" onClick={() => this.newGame()}>New Game</button>\n          </div>\n        </div>\n        <div className=\"board\">\n          <Board\n          squares = {current.squares}\n          onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\n/* Return history\n<div className=\"game-history\">\n  <ol className=\"game-history-list\">{moves}</ol>\n</div>\n*/\n\n// ========================================\n/* Render Game */\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\n// =========================================\n/* Calculate Winner */\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n"],"sourceRoot":""}